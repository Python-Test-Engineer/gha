name: Simple Outputs and Artifacts Demo

on:
  push:
  workflow_dispatch:

jobs:
  # Job 1: Create data and artifacts
  job1:
    runs-on: ubuntu-latest
    outputs:
      # Pass these outputs to other jobs
      message: ${{ steps.step2.outputs.message }}
      timestamp: ${{ steps.step1.outputs.timestamp }}
      file-name: ${{ steps.step3.outputs.filename }}
    
    steps:
      # Step 1: Generate timestamp
      - name: Step 1 - Generate timestamp
        id: step1
        run: |
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT
          echo "Generated timestamp: $TIMESTAMP"
      
      # Step 2: Create message using output from step 1
      - name: Step 2 - Create message
        id: step2
        run: |
          MESSAGE="Hello from ${{ steps.step1.outputs.timestamp }}"
          echo "message=$MESSAGE" >> $GITHUB_OUTPUT
          echo "Created message: $MESSAGE"
      
      # Step 3: Create files using outputs from previous steps
      - name: Step 3 - Create files
        id: step3
        run: |
          mkdir -p output
          
          FILENAME="data-${{ steps.step1.outputs.timestamp }}.txt"
          echo "filename=$FILENAME" >> $GITHUB_OUTPUT
          
          # Create file with data from previous steps
          echo "Timestamp: ${{ steps.step1.outputs.timestamp }}" > output/$FILENAME
          echo "Message: ${{ steps.step2.outputs.message }}" >> output/$FILENAME
          echo "Run Number: ${{ github.run_number }}" >> output/$FILENAME
          
          echo "Created file: $FILENAME"
      
      # Step 4: Upload as artifact
      - name: Step 4 - Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: job1-output
          path: output/

  # Job 2: Use outputs from job 1 and download artifacts
  job2:
    runs-on: ubuntu-latest
    needs: job1
    outputs:
      processed-message: ${{ steps.process.outputs.result }}
    
    steps:
      # Step 1: Show job-to-job data passing
      - name: Step 1 - Display inherited data
        run: |
          echo "=== Data from Job 1 ==="
          echo "Timestamp: ${{ needs.job1.outputs.timestamp }}"
          echo "Message: ${{ needs.job1.outputs.message }}"
          echo "File name: ${{ needs.job1.outputs.file-name }}"
      
      # Step 2: Download artifact from job 1
      - name: Step 2 - Download artifact
        uses: actions/download-artifact@v4
        with:
          name: job1-output
          path: downloaded/
      
      # Step 3: Process downloaded files
      - name: Step 3 - Process downloaded files
        id: process
        run: |
          echo "=== Downloaded files ==="
          ls -la downloaded/
          
          echo "=== File contents ==="
          cat downloaded/${{ needs.job1.outputs.file-name }}
          
          RESULT="Processed at $(date): ${{ needs.job1.outputs.message }}"
          echo "result=$RESULT" >> $GITHUB_OUTPUT
          echo "Processing result: $RESULT"
       
      # Step 4: Create new artifact with processed data
      - name: Step 4 - Create processed artifact
        run: |
          mkdir -p processed
          
          # Create summary file
          cat > processed/summary.txt << EOF
          Original timestamp: ${{ needs.job1.outputs.timestamp }}
          Original message: ${{ needs.job1.outputs.message }}
          Processing result: ${{ steps.process.outputs.result }}
          Processed by: Job 2
          EOF
          
          echo "Created processed summary"
      
      # Step 5: Upload processed artifact
      - name: Step 5 - Upload processed artifact
        uses: actions/upload-artifact@v4
        with:
          name: job2-processed
          path: processed/

  # Job 3: Final summary (depends on both jobs)
  job3:
    runs-on: ubuntu-latest
    needs: [job1, job2]
    
    steps:
      # Step 1: Download all artifacts
      - name: Step 1 - Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-artifacts/
      
      # Step 2: Create final summary
      - name: Step 2 - Create final summary
        run: |
          echo "=== Final Summary ==="
          echo "Job 1 timestamp: ${{ needs.job1.outputs.timestamp }}"
          echo "Job 1 message: ${{ needs.job1.outputs.message }}"
          echo "Job 2 result: ${{ needs.job2.outputs.processed-message }}"
          
          echo ""
          echo "=== All downloaded artifacts ==="
          find all-artifacts/ -type f -exec echo "File: {}" \; -exec cat {} \; -exec echo "" \;
          
          mkdir -p final-summary
          cat > final-summary/workflow-summary.txt << EOF
          Workflow Summary - Run #${{ github.run_number }}
          
          Job 1 outputs:
          - Timestamp: ${{ needs.job1.outputs.timestamp }}
          - Message: ${{ needs.job1.outputs.message }}
          - File: ${{ needs.job1.outputs.file-name }}
          
          Job 2 outputs:
          - Processed: ${{ needs.job2.outputs.processed-message }}
          
          All jobs completed successfully!
          EOF
      
      # Step 3: Upload final summary
      - name: Step 3 - Upload final summary
        uses: actions/upload-artifact@v4
        with:
          name: final-summary
          path: final-summary/