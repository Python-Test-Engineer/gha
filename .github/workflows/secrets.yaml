name: Secrets and Environment Variables Demo

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  demo-repo-secrets:
    name: Repository Secrets Demo
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Repository Secret
      run: |
        echo "Using repository secret REPO_SECRET_1"
        # Repository secrets are available across all environments
        echo "Secret length: ${#REPO_SECRET_1}"
        echo "Secret starts with: ${REPO_SECRET_1:0:3}..."
      env:
        REPO_SECRET_1: ${{ secrets.REPO_SECRET_1 }}
    
    - name: Repository Secret Status Check
      run: |
        if [ -z "$REPO_SECRET_1" ]; then
          echo "‚ùå REPO_SECRET_1 is not set"
          exit 1
        else
          echo "‚úÖ REPO_SECRET_1 is available"
        fi
      env:
        REPO_SECRET_1: ${{ secrets.REPO_SECRET_1 }}

  demo-environment-secrets:
    name: Environment Secrets Demo
    runs-on: ubuntu-latest
    
    # This job will use different environments
    strategy:
      matrix:
        environment: [development, staging, production]
    
    environment: 
      name: ${{ matrix.environment }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Display Environment Info
      run: |
        echo "üåç Current environment: ${{ matrix.environment }}"
        echo "Environment URL: ${{ github.environment }}"
    
    - name: Use Environment Variable VAR1
      run: |
        echo "Using environment variable VAR1 for ${{ matrix.environment }}"
        if [ -n "$VAR1" ]; then
          echo "‚úÖ VAR1 is set: $VAR1"
        else
          echo "‚ùå VAR1 is not set for this environment"
        fi
      env:
        VAR1: ${{ vars.VAR1 }}
    
    - name: Use Environment Secret (if available)
      run: |
        echo "Checking for environment-specific secrets..."
        if [ -n "$ENV_SECRET" ]; then
          echo "‚úÖ Environment secret found"
          echo "Secret length: ${#ENV_SECRET}"
        else
          echo "‚ÑπÔ∏è  No environment-specific secret set"
        fi
      env:
        ENV_SECRET: ${{ secrets.ENV_SECRET }}
    
    - name: Combined Usage Example
      run: |
        echo "=== Combined Secrets & Variables Demo ==="
        echo "Environment: ${{ matrix.environment }}"
        echo "Repository secret available: $([ -n "$REPO_SECRET_1" ] && echo "Yes" || echo "No")"
        echo "Environment variable VAR1: ${VAR1:-"Not set"}"
        echo "Environment secret available: $([ -n "$ENV_SECRET" ] && echo "Yes" || echo "No")"
      env:
        REPO_SECRET_1: ${{ secrets.REPO_SECRET_1 }}
        VAR1: ${{ vars.VAR1 }}
        ENV_SECRET: ${{ secrets.ENV_SECRET }}

  demo-conditional-deployment:
    name: Conditional Deployment Based on Secrets
    runs-on: ubuntu-latest
    needs: [demo-repo-secrets, demo-environment-secrets]
    if: success()
    
    environment: 
      name: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Pre-deployment Checks
      run: |
        echo "üîç Running pre-deployment checks..."
        
        # Check if required secrets are available
        MISSING_SECRETS=()
        
        if [ -z "$REPO_SECRET_1" ]; then
          MISSING_SECRETS+=("REPO_SECRET_1")
        fi
        
        if [ -z "$VAR1" ]; then
          MISSING_SECRETS+=("VAR1")
        fi
        
        if [ ${#MISSING_SECRETS[@]} -eq 0 ]; then
          echo "‚úÖ All required secrets and variables are available"
        else
          echo "‚ùå Missing secrets/variables: ${MISSING_SECRETS[*]}"
          exit 1
        fi
      env:
        REPO_SECRET_1: ${{ secrets.REPO_SECRET_1 }}
        VAR1: ${{ vars.VAR1 }}
    
    - name: Simulate Deployment
      run: |
        echo "üöÄ Deploying to production..."
        echo "Using configuration from VAR1: $VAR1"
        echo "Authenticating with REPO_SECRET_1: [HIDDEN]"
        echo "‚úÖ Deployment completed successfully!"
      env:
        REPO_SECRET_1: ${{ secrets.REPO_SECRET_1 }}
        VAR1: ${{ vars.VAR1 }}

  security-demo:
    name: Security Best Practices Demo
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Demonstrate Secret Masking
      run: |
        echo "üîí GitHub automatically masks secrets in logs"
        echo "Repository secret: $REPO_SECRET_1"
        echo "The above line will show [MASKED] instead of the actual secret"
      env:
        REPO_SECRET_1: ${{ secrets.REPO_SECRET_1 }}
    
    - name: Safe Environment Variable Usage
      run: |
        echo "üìù Environment variables are visible in logs:"
        echo "VAR1 value: $VAR1"
        echo "This is safe to display as it's a variable, not a secret"
      env:
        VAR1: ${{ vars.VAR1 }}
    
    - name: Conditional Secret Access
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          echo "üîê Limited secret access in pull requests from forks"
          echo "Some secrets may not be available for security reasons"
        else
          echo "üîì Full secret access available for trusted events"
        fi